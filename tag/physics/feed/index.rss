<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>physics &#8211; The Works of Matt Lockyer</title>
	<atom:link href="http://mattlockyer.com/tag/physics/feed/" rel="self" type="application/rss+xml" />
	<link>http://mattlockyer.com</link>
	<description></description>
	<lastBuildDate>Tue, 12 Dec 2017 20:28:52 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	
	<item>
		<title>Actionscript and Haxe Physics Engine Roundup</title>
		<link>http://mattlockyer.com/2011/04/15/actionscript-and-haxe-physics-engine-roundup/</link>
		<comments>http://mattlockyer.com/2011/04/15/actionscript-and-haxe-physics-engine-roundup/#respond</comments>
		<pubDate>Fri, 15 Apr 2011 15:37:34 +0000</pubDate>
		<dc:creator><![CDATA[Matt]]></dc:creator>
				<category><![CDATA[News]]></category>
		<category><![CDATA[Actionscript]]></category>
		<category><![CDATA[Haxe]]></category>
		<category><![CDATA[flash]]></category>
		<category><![CDATA[physics]]></category>

		<guid isPermaLink="false">http://mattlockyer.com/?p=425</guid>
		<description><![CDATA[<p>While developing a fast, 2d physics, lightweight, game engine, I tested multiple open source physics engines for three features: speed, memory usage, feature set. Note: I vetted each engine on how it performed on Air for Android. All of these engines are excellent choices for Web / Desktop where squeezing performance is not an issue. [&#8230;]</p>
<p>The post <a rel="nofollow" href="http://mattlockyer.com/2011/04/15/actionscript-and-haxe-physics-engine-roundup/">Actionscript and Haxe Physics Engine Roundup</a> appeared first on <a rel="nofollow" href="http://mattlockyer.com">The Works of Matt Lockyer</a>.</p>
]]></description>
				<content:encoded><![CDATA[<p>While developing a fast, 2d physics, lightweight, game engine, I tested multiple open source physics engines for three features: speed, memory usage, feature set.</p>
<p>Note: I vetted each engine on how it performed on Air for Android. All of these engines are excellent choices for Web / Desktop where squeezing performance is not an issue.</p>
<p>Here are the results:</p>
<p><a href="http://code.google.com/p/glaze/">Glaze</a>: high performance, low memory, full features (except buoyancy)<br />
<a href="http://code.google.com/p/physaxe/">Physaxe </a>(<a href="http://haxe.org">haxe</a>only): high performance, low memory, limited features<br />
<a href="http://box2dflash.sourceforge.net/">Box2d </a>(alchemy, <a href="http://haxe.org">haxe</a>, actionscript): medium performance, medium memory, full features<br />
<a href="http://www.motorphysics.de/">Motor2</a>: medium performance, medium memory, full features</p>
<p>My choice is <a href="http://code.google.com/p/glaze/">Glaze</a>, simply because it performed the best and had all the features I was looking for.</p>
<p>There is a divide in physics engines out there that I did notice: Chipmunk based engines (Glaze, Physaxe) and Box2D based engines (motor2).</p>
<p>The reasons being that Box2D has always been focused on simulation accuracy, while Chipmunk is geared towards game performance.</p>
<p>Needless to say, these are all my experiences and opinions, there are many articles debating these topics and the only way to really know which physics engine you should use is to test them yourself.</p>
<p>The post <a rel="nofollow" href="http://mattlockyer.com/2011/04/15/actionscript-and-haxe-physics-engine-roundup/">Actionscript and Haxe Physics Engine Roundup</a> appeared first on <a rel="nofollow" href="http://mattlockyer.com">The Works of Matt Lockyer</a>.</p>
]]></content:encoded>
			<wfw:commentRss>http://mattlockyer.com/2011/04/15/actionscript-and-haxe-physics-engine-roundup/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>OpenFrameworks</title>
		<link>http://mattlockyer.com/2010/01/02/the-big-move-openframeworks/</link>
		<comments>http://mattlockyer.com/2010/01/02/the-big-move-openframeworks/#respond</comments>
		<pubDate>Sun, 03 Jan 2010 01:56:19 +0000</pubDate>
		<dc:creator><![CDATA[Matt]]></dc:creator>
				<category><![CDATA[Works]]></category>
		<category><![CDATA[C++]]></category>
		<category><![CDATA[OF]]></category>
		<category><![CDATA[Openframeworks]]></category>
		<category><![CDATA[api]]></category>
		<category><![CDATA[graphics]]></category>
		<category><![CDATA[music]]></category>
		<category><![CDATA[opengl]]></category>
		<category><![CDATA[physics]]></category>
		<category><![CDATA[visualization]]></category>

		<guid isPermaLink="false">http://mattlockyer.com/?p=83</guid>
		<description><![CDATA[<p>A great time of mine was when I decided not to work for a month and make a particle and music visualizer engine. The amazing OpenFrameworks.cc allowed me to build a very robust, flexible, and powerful engine, and to focus on what I really wanted to achieve, without getting bogged down by hardware details etc. [&#8230;]</p>
<p>The post <a rel="nofollow" href="http://mattlockyer.com/2010/01/02/the-big-move-openframeworks/">OpenFrameworks</a> appeared first on <a rel="nofollow" href="http://mattlockyer.com">The Works of Matt Lockyer</a>.</p>
]]></description>
				<content:encoded><![CDATA[<p>A great time of mine was when I decided not to work for a month and make a particle and music visualizer engine. The amazing <a href="http://www.openframeworks.cc/">OpenFrameworks.cc</a> allowed me to build a very robust, flexible, and powerful engine, and to focus on what I really wanted to achieve, without getting bogged down by hardware details etc. The framework is for C++ on most major platforms.</p>
<p>The videos shown here are created by drawing particles and their reactions to each other given various forces. The trick is to draw the particles very fast so you can have a lot of them. Some clever opengl coding, <a href="http://nehe.gamedev.net/data/lessons/lesson.asp?lesson=45">VBOs</a>, allowed me to draw a fantastic amount of particles. Finally, I added some music forces, that influence velocity, color, and others.</p>
<p>This first video starts out softly and then get&#8217;s more intense. The song is an unreleased studio track by <a href="http://www.radiohead.com/deadairspace/">Radiohead</a>, and the video is my crowning achievement with this engine. It is best enjoyed in <a href="http://vimeo.com/6493644">HD</a> by going to the <a href="http://vimeo.com/6493644">Vimeo</a> page where it&#8217;s hosted.<br />
<center><br />
<iframe width="480" height="320" src="http://www.youtube.com/embed/hb16EjAWoDU" frameborder="0" allowfullscreen></iframe></center><br />
This was another video done with the same engine. Like the name says, it&#8217;s just a technical demonstration of what&#8217;s possible.</p>
<p><center><iframe width="480" height="320" src="http://www.youtube.com/embed/ieNZpKIykpg" frameborder="0" allowfullscreen></iframe></center><br />
Here are some images showing some primatives and other things I built using the engine. This is a cube equalizer, where the cubes hang from springy ropes attached at the &#8220;ceiling&#8221;.</p>
<p><a href="http://mattlockyer.com/wp-content/uploads/2010/01/cubeEqualizer2.jpg"><img class="aligncenter size-medium wp-image-84" title="cubeEqualizer2" src="http://mattlockyer.com/wp-content/uploads/2010/01/cubeEqualizer2-300x187.jpg" alt="" width="300" height="187" srcset="http://mattlockyer.com/wp-content/uploads/2010/01/cubeEqualizer2-300x187.jpg 300w, http://mattlockyer.com/wp-content/uploads/2010/01/cubeEqualizer2-1024x640.jpg 1024w" sizes="(max-width: 300px) 100vw, 300px" /></a><a href="http://mattlockyer.com/wp-content/uploads/2010/01/cubeEqualizer4.jpg"><img class="aligncenter size-medium wp-image-85" title="cubeEqualizer4" src="http://mattlockyer.com/wp-content/uploads/2010/01/cubeEqualizer4-300x187.jpg" alt="" width="300" height="187" srcset="http://mattlockyer.com/wp-content/uploads/2010/01/cubeEqualizer4-300x187.jpg 300w, http://mattlockyer.com/wp-content/uploads/2010/01/cubeEqualizer4-1024x640.jpg 1024w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Here is another picture of the particle swarm from the video above.</p>
<p><a href="http://mattlockyer.com/wp-content/uploads/2010/01/particleSwarm3.jpg"><img class="aligncenter size-medium wp-image-86" title="particleSwarm3" src="http://mattlockyer.com/wp-content/uploads/2010/01/particleSwarm3-300x187.jpg" alt="" width="300" height="187" srcset="http://mattlockyer.com/wp-content/uploads/2010/01/particleSwarm3-300x187.jpg 300w, http://mattlockyer.com/wp-content/uploads/2010/01/particleSwarm3-1024x640.jpg 1024w" sizes="(max-width: 300px) 100vw, 300px" /></a>And here&#8217;s a nice one of the field, with the reactive comets. The description of what this is can be found on the vimeo page. Because you should watch it in HD, on the actual page, it&#8217;s only civilized&#8230; Â  :P</p>
<p><a href="http://mattlockyer.com/wp-content/uploads/2010/01/polyFieldDesktopSmall.jpg"><img class="aligncenter size-medium wp-image-87" title="polyFieldDesktopSmall" src="http://mattlockyer.com/wp-content/uploads/2010/01/polyFieldDesktopSmall-300x187.jpg" alt="" width="300" height="187" srcset="http://mattlockyer.com/wp-content/uploads/2010/01/polyFieldDesktopSmall-300x187.jpg 300w, http://mattlockyer.com/wp-content/uploads/2010/01/polyFieldDesktopSmall-1024x640.jpg 1024w, http://mattlockyer.com/wp-content/uploads/2010/01/polyFieldDesktopSmall.jpg 1280w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>The post <a rel="nofollow" href="http://mattlockyer.com/2010/01/02/the-big-move-openframeworks/">OpenFrameworks</a> appeared first on <a rel="nofollow" href="http://mattlockyer.com">The Works of Matt Lockyer</a>.</p>
]]></content:encoded>
			<wfw:commentRss>http://mattlockyer.com/2010/01/02/the-big-move-openframeworks/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
	</channel>
</rss>
